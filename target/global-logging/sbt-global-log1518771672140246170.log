[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\vvs\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\vvs\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 1.8.0_231)
[debug]       Load.loadUnit: plugins took 60.6946ms
[debug]       Load.loadUnit: defsScala took 0.2092ms
[debug] [Loading] Scanning directory C:\Users\vvs\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vvs\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.0676 ms
[debug]           Load.resolveProject(global-plugins) took 33.4299ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\vvs\.sbt\1.0\plugins, plugins: List(<none>))) took 67.8271ms
[debug] [Loading] Done in C:\Users\vvs\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 81.659ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1945ms
[debug]     Load.loadUnit(file:/C:/Users/vvs/.sbt/1.0/plugins/, ...) took 147.9ms
[debug]   Load.apply: load took 265.8048ms
[debug]   Load.apply: resolveProjects took 4.4922ms
[debug]   Load.apply: finalTransforms took 36.3016ms
[debug]   Load.apply: config.delegates took 5.624ms
[debug]   Load.apply: Def.make(settings)... took 728.6587ms
[debug]   Load.apply: structureIndex took 57.5943ms
[debug]   Load.apply: mkStreams took 1.7164ms
[info] loading global plugins from C:\Users\vvs\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2293.0335ms
[debug]           Load.loadUnit: plugins took 18.7768ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\vvs\IdeaProjects\mail_spark_3\project
[debug]             Load.loadUnit: mkEval took 6.3457ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vvs\IdeaProjects\mail_spark_3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.24 ms
[info] loading settings for project mail_spark_3-build from idea.sbt ...
[debug]               Load.resolveProject(mail_spark_3-build) took 6.5764ms
[debug]             Load.loadTransitive: finalizeProject(Project(id mail_spark_3-build, base: C:\Users\vvs\IdeaProjects\mail_spark_3\project, plugins: List(<none>))) took 8.2138ms
[debug] [Loading] Done in C:\Users\vvs\IdeaProjects\mail_spark_3\project, returning: (mail_spark_3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1420.3611ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.856ms
[debug]         Load.loadUnit(file:/C:/Users/vvs/IdeaProjects/mail_spark_3/project/, ...) took 1442.7702ms
[debug]       Load.apply: load took 1443.7268ms
[debug]       Load.apply: resolveProjects took 0.0643ms
[debug]       Load.apply: finalTransforms took 4.6189ms
[debug]       Load.apply: config.delegates took 0.2428ms
[debug]       Load.apply: Def.make(settings)... took 78.214ms
[debug]       Load.apply: structureIndex took 20.6217ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\vvs\IdeaProjects\mail_spark_3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2306.3799ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\vvs\IdeaProjects\mail_spark_3
[debug]       Load.loadUnit: mkEval took 0.1807ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vvs\IdeaProjects\mail_spark_3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3918 ms
[info] loading settings for project mail_spark_3 from build.sbt ...
[debug]         Load.resolveProject(mail_spark_3) took 28.8631ms
[debug]       Load.loadTransitive: finalizeProject(Project(id mail_spark_3, base: C:\Users\vvs\IdeaProjects\mail_spark_3, plugins: List(<none>))) took 31.1248ms
[debug] [Loading] Done in C:\Users\vvs\IdeaProjects\mail_spark_3, returning: (mail_spark_3)
[debug]     Load.loadUnit: loadedProjectsRaw took 906.7955ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.0915ms
[debug]   Load.loadUnit(file:/C:/Users/vvs/IdeaProjects/mail_spark_3/, ...) took 3221.7192ms
[debug] Load.apply: load took 3222.7472ms
[debug] Load.apply: resolveProjects took 0.0644ms
[debug] Load.apply: finalTransforms took 15.6087ms
[debug] Load.apply: config.delegates took 0.2121ms
[debug] Load.apply: Def.make(settings)... took 52.5464ms
[debug] Load.apply: structureIndex took 12.7612ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to mail_spark_3 (in build file:/C:/Users/vvs/IdeaProjects/mail_spark_3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59784 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59784, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to mail_spark_3 (in build file:/C:/Users/vvs/IdeaProjects/mail_spark_3/)
[debug] > Exec(idea-shell, None, None)
